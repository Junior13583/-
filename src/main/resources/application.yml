my-thread-pool:
  maxPoolSize: 20
  corePoolSize: 8
  queueCapacity: 2048
  keepAliveSeconds: 60
  threadNamePrefix: springThreadPool-
  waitForTasksToCompleteOnShutdown: true

server:
  port: 1234
  address: 10.197.24.79

websocket:
  # 不使用 https 时，使用 ws 协议
  protocol: ws://

  # 使用 https，需要将协议改成 wss
#  protocol: wss://

  # 不使用 nginx 代理时，端口设置和 web 服务端口一致
  port: 1234

  # 使用 nginx 代理时，端口需要设置为代理之后的端口号
  # 例如 当项目使用 https 时，这时候需要将端口号设置为443
  port: 443

# jwt 配置
jwt:
  header: "Authorization"     # token 返回头部
  tokenPrefix: "Bearer "      # token 前缀
  secret: "junior_1353815638" # 私钥
  expireTime: 1800000     # token 的有效时间，单位是毫秒


spring:
  application:
    name: chat-room
  servlet:
    multipart:
      location: D:/chatroom-files
      max-file-size: 500MB
      max-request-size: 500MB
  datasource:
    url: jdbc:mysql://10.175.94.80:7000/junior?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
  cloud:
    sentinel:
      transport:
        dashboard: localhost:3333
        port: 8079
        heartbeat-interval-ms: 500
      eager: true


management:
  endpoints:
    web:
      exposure:
        include: '*'

mybatis:
  config-location: classpath:mapperConfig/mapperConfig.xml
  type-aliases-package: com.example.junior.entity.request
  mapper-locations: classpath:mapper/*Mapper.xml

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql



